{"is_source_file": true, "format": "TypeScript", "description": "This file contains utility functions and API interactions related to scheduling, including fetching and updating schedule boards and operations, as well as defining demo data for scheduling visualization.", "external_files": ["./client", "../types/scheduler"], "external_methods": ["apiGet", "apiPost"], "published": ["getScheduleBoard", "updateOperation"], "classes": [], "methods": [{"name": "function startOfHour(date = new Date()): Date { startOfHour", "description": "Returns a Date object rounded down to the start of the hour.", "scope": "", "scopeKind": ""}, {"name": "function addMinutes(date: Date, minutes: number): Date { addMinutes", "description": "Adds a specified number of minutes to a given Date object.", "scope": "", "scopeKind": ""}, {"name": "function iso(d: Date) { iso", "description": "Converts a Date object to its ISO string representation.", "scope": "", "scopeKind": ""}, {"name": "function demoBoard(): ScheduleBoard { demoBoard", "description": "Creates and returns a demo ScheduleBoard object with predefined work centers and operations.", "scope": "", "scopeKind": ""}, {"name": "export async function getScheduleBoard(boardId: string = 'default'): Promise<ScheduleBoard> { getScheduleBoard", "description": "Fetches a scheduling board from backend API endpoints, falling back to demo data if API calls fail.", "scope": "", "scopeKind": ""}, {"name": "export async function updateOperation( updateOperation", "description": "Attempts to update an operation via API calls, falling back to modify demo data if necessary.", "scope": "", "scopeKind": ""}], "calls": ["apiGet<ScheduleBoard>", "apiPost<Operation>", "demoBoard", "encodeURIComponent", "new Date()", "new Date().toISOString()", "new Date(Date.now() + 3600e3).toISOString()"], "search-terms": ["schedule", "operation update", "demo schedule board", "fetch schedule", "update operation", "scheduler API", "schedule board demo"], "state": 2, "file_id": 37, "knowledge_revision": 117, "git_revision": "", "ctags": [{"_type": "tag", "name": "addMinutes", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^function addMinutes(date: Date, minutes: number): Date {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^  const base = demoBoard().operations.find((o) => o.id === id) || {$/", "language": "TypeScript", "kind": "constant", "scope": "updateOperation", "scopeKind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^  const base = startOfHour(now);$/", "language": "TypeScript", "kind": "constant", "scope": "demoBoard", "scopeKind": "function"}, {"_type": "tag", "name": "boardId", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^  const body = { ...input, boardId };$/", "language": "TypeScript", "kind": "constant", "scope": "updateOperation", "scopeKind": "function"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^  const body = { ...input, boardId };$/", "language": "TypeScript", "kind": "constant", "scope": "updateOperation", "scopeKind": "function"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^  for (const c of candidates) {$/", "language": "TypeScript", "kind": "constant", "scope": "updateOperation", "scopeKind": "function"}, {"_type": "tag", "name": "candidates", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^  const candidates = [$/", "language": "TypeScript", "kind": "constant", "scope": "getScheduleBoard", "scopeKind": "function"}, {"_type": "tag", "name": "candidates", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^  const candidates = [$/", "language": "TypeScript", "kind": "constant", "scope": "updateOperation", "scopeKind": "function"}, {"_type": "tag", "name": "d", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^  const d = new Date(date);$/", "language": "TypeScript", "kind": "constant", "scope": "startOfHour", "scopeKind": "function"}, {"_type": "tag", "name": "demoBoard", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^function demoBoard(): ScheduleBoard {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getScheduleBoard", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^export async function getScheduleBoard(boardId: string = 'default'): Promise<ScheduleBoard> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "iso", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^function iso(d: Date) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^  const now = new Date();$/", "language": "TypeScript", "kind": "constant", "scope": "demoBoard", "scopeKind": "function"}, {"_type": "tag", "name": "ops", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^  const ops: Operation[] = [$/", "language": "TypeScript", "kind": "constant", "scope": "demoBoard", "scopeKind": "function"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^    { path: `\\/api\\/v1\\/scheduling\\/operation\\/${encodeURIComponent(id)}`, method: 'POST' as con/", "language": "TypeScript", "kind": "constant", "scope": "updateOperation", "scopeKind": "function"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^    { path: `\\/api\\/v1\\/scheduling\\/operations\\/${encodeURIComponent(id)}`, method: 'PATCH' as c/", "language": "TypeScript", "kind": "constant", "scope": "updateOperation", "scopeKind": "function"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^  for (const path of candidates) {$/", "language": "TypeScript", "kind": "constant", "scope": "getScheduleBoard", "scopeKind": "function"}, {"_type": "tag", "name": "startOfHour", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^function startOfHour(date = new Date()): Date {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updateOperation", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^export async function updateOperation($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "wcs", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/scheduler.ts", "pattern": "/^  const wcs: WorkCenter[] = [$/", "language": "TypeScript", "kind": "constant", "scope": "demoBoard", "scopeKind": "function"}], "hash": "9fe82fb4f4cbc8eac410018e776dd8e6", "format-version": 4, "code-base-name": "manufacturing_frontend", "filename": "manufacturing_frontend/src/api/scheduler.ts", "revision_history": [{"117": ""}]}