{"is_source_file": true, "format": "TypeScript", "description": "This file defines API functions for admin operations such as managing users, roles, and tenants in a manufacturing cloud suite's frontend. It includes functions to get, create, update, and delete these entities, with fallback demo data matching a client-side demo mode.", "external_files": ["./client", "../types/auth"], "external_methods": ["apiGet", "apiPost", "apiPatch", "apiPut", "apiDelete"], "published": ["getUsers", "createUser", "updateUser", "deleteUser", "getRoles", "createRole", "deleteRole", "getTenants", "createTenant", "deleteTenant"], "classes": [], "methods": [{"name": "async function tryEndpoints<T>(candidates: Array<{ method: 'GET' | 'POST' | 'PUT' | 'PATCH' | 'D/ tryEndpoints", "description": "Attempts a list of API endpoint calls in order until one succeeds, then invokes fallback if all fail.", "scope": "", "scopeKind": ""}, {"name": "export async function getUsers(): Promise<User[]> { getUsers", "description": "Retrieves the list of users, attempting multiple endpoints with fallback demo data.", "scope": "", "scopeKind": ""}, {"name": "export async function createUser(input: Partial<User> & { email: string; name?: string | null; r/ createUser", "description": "Creates a new user via API or fallback, updating demo state.", "scope": "", "scopeKind": ""}, {"name": "export async function updateUser(id: string, input: Partial<User>): Promise<User> { updateUser", "description": "Updates an existing user via API or fallback, modifying demo state.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteUser(id: string): Promise<{ success: boolean }> { deleteUser", "description": "Deletes a user via API or fallback, updating demo state.", "scope": "", "scopeKind": ""}, {"name": "export async function getRoles(): Promise<string[]> { getRoles", "description": "Retrieves list of roles with API fallback.", "scope": "", "scopeKind": ""}, {"name": "export async function createRole(input: { name: string }): Promise<{ success: boolean }> { createRole", "description": "Creates a new role with API fallback, updating demo data.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteRole(name: string): Promise<{ success: boolean }> { deleteRole", "description": "Deletes a role with API fallback, updating demo data.", "scope": "", "scopeKind": ""}, {"name": "export async function getTenants(): Promise<Tenant[]> { getTenants", "description": "Retrieves list of tenants with API fallback.", "scope": "", "scopeKind": ""}, {"name": "export async function createTenant(input: { id: string; name?: string | null }): Promise<Tenant>/ createTenant", "description": "Creates a new tenant with API fallback, updating demo data.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteTenant(id: string): Promise<{ success: boolean }> { deleteTenant", "description": "Deletes a tenant with API fallback, updating demo data.", "scope": "", "scopeKind": ""}], "calls": ["apiGet", "apiPost", "apiPut", "apiPatch", "apiDelete"], "search-terms": ["admin users API", "fallback demo data", "user management", "role management", "tenant management", "tryEndpoints", "admin.ts", "manufacturing cloud"], "state": 2, "file_id": 42, "knowledge_revision": 130, "git_revision": "", "ctags": [{"_type": "tag", "name": "DEMO_ROLES", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^let DEMO_ROLES: string[] = ['admin', 'inventory', 'production', 'quality', 'scheduler', 'purchas/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "DEMO_TENANTS", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^let DEMO_TENANTS: Tenant[] = [{ id: 'demo', name: 'Demo' }];$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "DEMO_USERS", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^let DEMO_USERS: User[] = [$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^  for (const c of candidates) {$/", "language": "TypeScript", "kind": "constant", "scope": "tryEndpoints", "scopeKind": "function"}, {"_type": "tag", "name": "createRole", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^export async function createRole(input: { name: string }): Promise<{ success: boolean }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createTenant", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^export async function createTenant(input: { id: string; name?: string | null }): Promise<Tenant>/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createUser", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^export async function createUser(input: Partial<User> & { email: string; name?: string | null; r/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteRole", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^export async function deleteRole(name: string): Promise<{ success: boolean }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteTenant", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^export async function deleteTenant(id: string): Promise<{ success: boolean }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteUser", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^export async function deleteUser(id: string): Promise<{ success: boolean }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getRoles", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^export async function getRoles(): Promise<string[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getTenants", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^export async function getTenants(): Promise<Tenant[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getUsers", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^export async function getUsers(): Promise<User[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^      const t: Tenant = { id: input.id, name: input.name || input.id };$/", "language": "TypeScript", "kind": "constant", "scope": "createTenant", "scopeKind": "function"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^      const u: User = { id: `u-${Date.now()}`, email: input.email, name: input.name || input.ema/", "language": "TypeScript", "kind": "constant", "scope": "createUser", "scopeKind": "function"}, {"_type": "tag", "name": "roles", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^      const u: User = { id: `u-${Date.now()}`, email: input.email, name: input.name || input.ema/", "language": "TypeScript", "kind": "constant", "scope": "createUser", "scopeKind": "function"}, {"_type": "tag", "name": "t", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^      const t: Tenant = { id: input.id, name: input.name || input.id };$/", "language": "TypeScript", "kind": "constant", "scope": "createTenant", "scopeKind": "function"}, {"_type": "tag", "name": "tryEndpoints", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^async function tryEndpoints<T>(candidates: Array<{ method: 'GET' | 'POST' | 'PUT' | 'PATCH' | 'D/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "u", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^      const u: User = { id: `u-${Date.now()}`, email: input.email, name: input.name || input.ema/", "language": "TypeScript", "kind": "constant", "scope": "createUser", "scopeKind": "function"}, {"_type": "tag", "name": "updateUser", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/admin.ts", "pattern": "/^export async function updateUser(id: string, input: Partial<User>): Promise<User> {$/", "language": "TypeScript", "kind": "function"}], "hash": "f441f7877d391e9c498c96b46d9a2214", "format-version": 4, "code-base-name": "manufacturing_frontend", "filename": "manufacturing_frontend/src/api/admin.ts", "fields": [{"name": "let DEMO_ROLES: string[] = ['admin', 'inventory', 'production', 'quality', 'scheduler', 'purchas/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let DEMO_TENANTS: Tenant[] = [{ id: 'demo', name: 'Demo' }];", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let DEMO_USERS: User[] = [", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"130": ""}]}