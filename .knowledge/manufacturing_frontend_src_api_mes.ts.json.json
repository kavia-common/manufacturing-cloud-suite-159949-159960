{"is_source_file": true, "format": "TypeScript", "description": "This file provides helper functions and API client wrappers for Manufacturing Execution System (MES) modules, including production, inventory, and quality control. It contains functions to fetch, update, and simulate data related to work orders, stock, inspections, and nonconformances. The code uses external API functions (`apiGet`, `apiPost`) and type imports for structured data handling.", "external_files": ["./client", "../types/mes"], "external_methods": ["apiGet", "apiPost"], "published": ["getWorkOrders", "updateWorkOrderStatus", "findWorkOrderByBarcode", "getStock", "receiveStock", "issueStock", "moveStock", "getInspections", "executeInspection", "createNonconformance"], "classes": [], "methods": [{"name": "export async function getWorkOrders(status?: string): Promise<WorkOrder[]> { getWorkOrders", "description": "Fetches a list of work orders, optionally filtered by status. Returns mock data if API call fails.", "scope": "", "scopeKind": ""}, {"name": "export async function updateWorkOrderStatus(id: string, action: WorkOrderAction, payload?: any):/ updateWorkOrderStatus", "description": "Transitions a work order to a new state based on the specified action (start, pause, resume, complete, cancel). Returns a mock work order if API call fails.", "scope": "", "scopeKind": ""}, {"name": "export async function findWorkOrderByBarcode(code: string): Promise<WorkOrder | null> { findWorkOrderByBarcode", "description": "Resolves a barcode to a work order object. Falls back to creating a demo work order if API call fails.", "scope": "", "scopeKind": ""}, {"name": "export async function getStock(): Promise<InventoryItem[]> { getStock", "description": "Retrieves current inventory stock data, with fallback mock data.", "scope": "", "scopeKind": ""}, {"name": "export async function receiveStock(input: ReceiveTxnInput): Promise<{ success: boolean; id?: str/ receiveStock", "description": "Records incoming stock, returning success status and fallback ID.", "scope": "", "scopeKind": ""}, {"name": "export async function issueStock(input: IssueTxnInput): Promise<{ success: boolean; id?: string / issueStock", "description": "Issues stock to production or scrap, with fallback ID.", "scope": "", "scopeKind": ""}, {"name": "export async function moveStock(input: MoveTxnInput): Promise<{ success: boolean; id?: string }>/ moveStock", "description": "Moves inventory between locations, returning success status and fallback ID.", "scope": "", "scopeKind": ""}, {"name": "export async function getInspections(status?: string): Promise<Inspection[]> { getInspections", "description": "Fetches inspections, filtered by status, with fallback mock data.", "scope": "", "scopeKind": ""}, {"name": "export async function executeInspection(id: string, input: ExecuteInspectionInput): Promise<{ su/ executeInspection", "description": "Submits inspection results and marks inspections complete or raised nonconformance.", "scope": "", "scopeKind": ""}, {"name": "export async function createNonconformance(input: NonconformanceInput): Promise<{ success: boole/ createNonconformance", "description": "Records a nonconformance tied to work orders, lots, or inspections, with fallback ID.", "scope": "", "scopeKind": ""}], "calls": ["apiGet", "apiPost"], "search-terms": ["mes", "work orders", "inventory", "inspections", "nonconformance", "production", "API wrappers", "mock data"], "state": 2, "file_id": 28, "knowledge_revision": 75, "git_revision": "", "ctags": [{"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^    const base: WorkOrder = {$/", "language": "TypeScript", "kind": "constant", "scope": "updateWorkOrderStatus", "scopeKind": "function"}, {"_type": "tag", "name": "createNonconformance", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^export async function createNonconformance(input: NonconformanceInput): Promise<{ success: boole/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "executeInspection", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^export async function executeInspection(id: string, input: ExecuteInspectionInput): Promise<{ su/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "findWorkOrderByBarcode", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^export async function findWorkOrderByBarcode(code: string): Promise<WorkOrder | null> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getInspections", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^export async function getInspections(status?: string): Promise<Inspection[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getStock", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^export async function getStock(): Promise<InventoryItem[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getWorkOrders", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^export async function getWorkOrders(status?: string): Promise<WorkOrder[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "issueStock", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^export async function issueStock(input: IssueTxnInput): Promise<{ success: boolean; id?: string /", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "item", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^      item: 'UNKNOWN',$/", "language": "TypeScript", "kind": "constant", "scope": "updateWorkOrderStatus", "scopeKind": "function"}, {"_type": "tag", "name": "moveStock", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^export async function moveStock(input: MoveTxnInput): Promise<{ success: boolean; id?: string }>/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "number", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^      number: id,$/", "language": "TypeScript", "kind": "constant", "scope": "updateWorkOrderStatus", "scopeKind": "function"}, {"_type": "tag", "name": "qs", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^    const qs = status ? `?status=${encodeURIComponent(status)}` : '';$/", "language": "TypeScript", "kind": "constant", "scope": "getInspections", "scopeKind": "function"}, {"_type": "tag", "name": "qs", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^    const qs = status ? `?status=${encodeURIComponent(status)}` : '';$/", "language": "TypeScript", "kind": "constant", "scope": "getWorkOrders", "scopeKind": "function"}, {"_type": "tag", "name": "quantity", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^      quantity: 0,$/", "language": "TypeScript", "kind": "constant", "scope": "updateWorkOrderStatus", "scopeKind": "function"}, {"_type": "tag", "name": "receiveStock", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^export async function receiveStock(input: ReceiveTxnInput): Promise<{ success: boolean; id?: str/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updateWorkOrderStatus", "path": "/home/kavia/workspace/code-generation/manufacturing-cloud-suite-159949-159960/manufacturing_frontend/src/api/mes.ts", "pattern": "/^export async function updateWorkOrderStatus(id: string, action: WorkOrderAction, payload?: any):/", "language": "TypeScript", "kind": "function"}], "hash": "d045ee1bea4beb95f611f67229a48a63", "format-version": 4, "code-base-name": "manufacturing_frontend", "filename": "manufacturing_frontend/src/api/mes.ts", "revision_history": [{"75": ""}]}